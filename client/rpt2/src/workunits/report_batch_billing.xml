<workunit>
    <invokers>
        <invoker folderid="/explorer/report/landtax" caption="Realty Tax Batch Billing" action="init" role="LANDTAX" permission="billing.batch" index="100" />
        
        <invoker type="formActions" action="_close" caption="Close" mnemonic="c" icon="images/cancel.png" immediate="true" visibleWhen="#{mode == 'init'}"/>
        <invoker type="formActions" action="print" caption="Print" mnemonic="p" shortcut="ctrl + P" icon="images/doc-view.png" visibleWhen="#{mode == 'init'}"/>
        <invoker type="formActions" action="cancelPrinting" caption="Cancel Printing" icon="images/cancel.png" mnemonic="a" shortcut="ctrl + a" visibleWhen="#{mode == 'printing'}" />
       
    </invokers>
    <code>
<![CDATA[

import com.rameses.rcp.common.*;
import com.rameses.rcp.annotations.*;
import com.rameses.osiris2.client.*;
import com.rameses.osiris2.reports.*;
import com.rameses.rcp.framework.TaskManager;

class RPTBatchBillingReportController
{
    @Binding
    def binding

    @Service("ReportParameterService")
    def svcParams
    
    @Service("RPTBillingService")
    def svc
    
    @Service('FAASService')
    def faasSvc
    
    @Service('Var')
    def var 
   
    def lgu;
    def barangays;
    def barangay;
    def fromtdno
    def totdno
    def batchoption = 'bybarangay'
    
    def msg 
    def mode 
    def batchTask
    
    public void init() {
        mode='init';
    }
    
    def lguList
    def getLgus() {
        if( !lguList) {
            def lgutype = var.lgu_type.toLowerCase();            
            if( lgutype.matches('city')) 
                lguList = faasSvc.getDistricts();
            else if( lgutype.matches('city|municipality')) 
                lguList = faasSvc.getCityMunicipalityList();
            else if( lgutype.matches('province'))
                lguList = faasSvc.getMunicipalities();
            else 
                lguList = [];
        }
        return lguList;
    }
    
    public void setLgu( def lgu ) {
        this.lgu = lgu;
        barangays = faasSvc.getBarangayListByParentId(lgu.objid);
        binding.refresh();
    }
    
    def updateMessage = { msg ->
        this.msg = msg
        binding.refresh('msg')
    }
    
    def onFinish = { msg -> 
        this.msg = msg
        this.mode = 'init';
        binding.refresh();
    }
    
    def onError = { err ->
        this.mode = 'init';
        binding.refresh();
        MsgBox.err( err );
    }
    
    def cancelPrinting() {
        batchTask.interrupt = true;
        this.mode = 'init'
        msg = 'Printing has been cancelled.  '
        binding.refresh();
    }
    
    void setBatchoption( batchoption ) {
        this.batchoption = batchoption
        fromtdno = null
        totdno = null
    }
 
    public void print() {
        mode = 'printing';
        batchTask = new BatchTask([
                updateMessage   : updateMessage,
                onError         : onError,
                onFinish        : onFinish, 
                interrupt       : false, 
                svcParams       : svcParams,
                svc             : svc,
                batchoption     : batchoption,
                barangay        : barangay,
                fromtdno        : fromtdno,
                totdno          : totdno,
             ]);
        Thread t = new Thread( batchTask);
        t.start();
    }
       
}

class BatchTask implements Runnable {
    
    def svcParams
    def svc;

    def ledgerlist;
    def bill;
    
    def batchoption
    def barangay
    def fromtdno
    def totdno
    
    def updateMessage;
    def onError;
    def onFinish;
    boolean interrupt 
    
    public void run() {
        try { 
            ledgerlist = getLedgersForPrinting()
            while(!interrupt && !ledgerlist.isEmpty() ) {
                def o = ledgerlist.remove(0);
                bill = svc.generateBillByTdNo( o.tdno )
                report.viewReport()
                ReportUtil.print( report.report, true) ;
                try { Thread.sleep( 100 ) } catch( e ) { }
                updateMessage("Processing TD No. ${o.tdno} "  );
            }    
            def msg = "" 
            if(interrupt) {
                msg = 'Printing has been interrupted.    '
            }
            onFinish(msg );
       } catch(e) {
            onError( e );
       }
    }
    
    def getLedgersForPrinting(){
        if( batchoption == 'bytd' ){
            return svc.getOpenLedgersByTdRange( fromtdno, totdno )
        }
        return svc.getOpenLedgersByBarangay( barangay.lguname )
    }
    
    def report = [
        getReportName : { return 'rptbilling/rptbilling' },
        getReportData : { return bill },
        getParameters : { return svcParams.getStandardParameter( OsirisContext?.env?.USERNAME ) }
    ] as ServerReportModel
    
}

]]>        
        
    </code>
    <pages>
        <page  template="etracs2.rpt.report.RPTBatchBillingReportPage" />
    </pages>
</workunit>