<workunit>
    <invokers>
        <invoker folderid="/explorer/report/ctc" action="init" caption="Barangay Share" target="window" index="100" role="CTC_REPORTS" permission="ctcreport.brgyshare"/>
        <invoker folderid="/explorer/report/ctc" action="initOldFormat" caption="Barangay Share (old)" target="window" index="100" role="CTC_REPORTS" permission="ctcreport.brgyshare"/>
        
        <invoker type="formActions"     action="_close" caption="Back" mnemonic="b" shortcut="ctrl + B" icon="images/back.png"/>
        <invoker type="formActions"     action="print" caption="Print" mnemonic="p" shortcut="ctrl + P" icon="images/doc-view.png"/>
        <invoker type="formActions"     action="preview" caption="Preview" mnemonic="v"             icon="images/doc-view.png"/>
        
        <invoker type="previewActions"  action="back" caption="Back" icon="images/back.png" immediate="true" />
    </invokers>
    <code>
<![CDATA[

import com.rameses.rcp.common.*;
import com.rameses.rcp.annotations.*;
import com.rameses.osiris2.client.*;
import com.rameses.osiris2.reports.*;

class BarangayShareController
{
    @Binding
    def binding
    
    @Service("ReportParameterService")
    def svcParams;
    
    @Service('CTCReportService') 
    def svc 
    
    @Service('DateService')
    def dateSvc
    
    def month
    def param = [:];
    def monthList;
    def reportdata
    def reportName
    
    void initOldFormat(){
        reportName = 'CTCBrgyShareOld'
        doInit()
    }
    
    void init() {
        reportName = 'CTCBrgyShare'
        doInit()
    }
    
    void doInit() {
        def parsedate = dateSvc.parseCurrentDate()
        param.year = parsedate.year 
        monthList = dateSvc.getMonths();
        month = monthList.find{ it.index == parsedate.month }
    }
     
    def preview() {
        generateReport()
        return 'preview' 
    }
    
    void generateReport() {
        param.month = month.index;
        param.period = month.caption;
        reportdata = svc.buildBrgyShare( param )
        report.viewReport()
    }
    
    void print(){
        generateReport()
        ReportUtil.print( report.report, true )
    }
    
    def report = [
        getReportName : { return reportName },
        getReportData : { return reportdata },
        getParameters : {  
             def params = svcParams.getStandardParameter( OsirisContext.env.USERNAME )
             params.PERIOD = month.caption + ', ' + param.year
             return params;
        }
    ] as ServerReportModel;
        
    def back() {
        return 'default' 
    }
    
    
}
]]>        
        
    </code>
    <pages>
        <page template="etracs2.ctc.tc.ui.report.BrgyShareInitPage" />
        <page name="preview" template="etracs2.common.PreviewPage" />
    </pages>
</workunit>